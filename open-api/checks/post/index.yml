summary: Create a check
description: |
  This endpoint is used to create a custom checks. You may pass one check or an array of checks in the JSON body.
  Some guidelines about using this endpoint:
  * Each check object you enter will required `check.relationships.account`.
  If you provide an account which you don't have WRITE access to, the check will not be saved.
  * Check Ids are constructed as: `ccc:accountId:ruleId:service:region:resourceId`
  * If you add a check with the same accountId, ruleId, service, region, AND resourceId as another existing check in the database, this new check WILL write over the existing check.
  * Since resource is an optional attribute, checks entered without resource will not have the resourceId part of the check Id.

requestBody:
  required: true
  content:
    application/json:
      schema:
        type: object
        properties:
          data:
            $ref: ./check-request-post.yml

responses:
  200:
    description: OK
    content:
      application/json:
        schema:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: ../check-response.yml
  400:
    description: Bad Request. Cannot process request due to a client error.
    content:
      application/json:
        schema:
          type: object
          properties:
            errors:
              type: array
              items:
                type: object
                properties:
                  status:
                    type: number
                    example: 400
                  message:
                    type: string
                    example: query parameter accountIds is required
  401:
    description: Unauthorized. The requester user does not have enough privilege.
    content:
      application/json:
        schema:
          type: object
          properties:
            errors:
              type: array
              items:
                type: object
                properties:
                  status:
                    type: number
                    example: 401
                  message:
                    type: string
                    example: Unauthorized
  403:
    description: Forbidden. This happens when a valid api key is not provided or the user does not have access to the profile.
    content:
      application/json:
        schema:
          $ref: ../../shared-schemas/403.yml
  422:
    description: Unprocessable Entity
    content:
      application/json:
        schema:
          type: object
          properties:
            errors:
              type: array
              items:
                type: object
                properties:
                  status:
                    type: integer
                    example: 422
                    description: Error code.
                  source:
                    type: object
                    properties:
                      pointer:
                        type: string
                        example: /data/attributes/message
                  details:
                    type: string
                    example: A message is required

  500:
    description: Bad Request. Cannot process request due to a client error.
    content:
      application/json:
        schema:
          type: object
          properties:
            errors:
              type: array
              items:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                    description: Error code.
                  detail:
                    type: string
                    example: Internal Server Error
security:
  - Authorizer: []
